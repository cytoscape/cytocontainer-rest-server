# Example configuration file for Community Detection service

# Sets Community Detection task directory where results from queries are stored
communitydetection.task.dir = /opt/communitydetection/tasks

# Sets number of workers to use to run tasks
communitydetection.number.workers = 1

# Docker command to run
communitydetection.docker.cmd = /bin/podman

# Algorithm/ docker command timeout in seconds. Anything taking longer will be killed
communitydetection.algorithm.timeout = 180

# Path to file containing json of algorithms
communitydetection.algorithm.map = /etc/communitydetectionalgorithms.json

# Name of Diffusion algorithm to serve on legacy POST endpoint
# NOTE: Should be set to name of algorithm
#       in algorithms json file.
# (Only set this to set up a diffusion service, can be commented out)
# communitydetection.diffusion.algorithm = networkheatdiffusion

# Delay in milliseconds to wait while checking for completion of Diffusion
# (Only relevant if setting up diffusion service, can be commented out)
# communitydetection.diffusion.polldelay = 100

# Mount options, if unset :ro is used (podman may require :ro,z)
communitydetection.mount.options = :ro,z

# Sets HOST URL prefix (value is prefixed to Location header when query is invoked. Can be commented out)
# communitydetection.host.url = http://ndexbio.org

# If set, overrides title shown in Swagger and openapi.json
# swagger.title = my service

# If set, overrides description shown in Swagger and openapi.json
# swagger.description = description of my service

# Sets directory where log files will be written for Jetty web server
runserver.log.dir = /var/log/communitydetection

# Sets port Jetty web service will be run under
runserver.port = 8081

# Sets Jetty Context Path for Community Detection
runserver.contextpath = /cd

# Valid log levels DEBUG INFO WARN ERROR ALL
runserver.log.level = INFO

